#pragma once
#include <iostream>
using namespace std;

int nhuan(int y)
{
    return ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0);
}

bool HopLe(int d, int m, int y)
{
    if (m > 12 || m < 1 || d < 1) {
        return 0;
    }

    switch (m)
    {
    case 1:case 3:case 5:case 7:case 8:case 10:case 12:
    {
        if (d > 31) {
        return 0;
        break;
        }
    }

    case 2:
    {
        if (nhuan(y))
        {
            if (d > 29) {
                return 0;
                break;
            }
            return ;
        }
        if (d > 28) {
            return 0;
            break;
        }
    }

    case 4:case 6:case 9:case 11:
    {
        if (d > 30) {
            return 0;
            break;
        }
    }
    }

    return 1;
}

class Birth {
protected:
	int d, m, y;
public:
	Birth();
	friend istream& operator >> (istream& nhap, Birth& a);
	friend ostream& operator << (ostream& xuat, Birth a);
};


#include "Birth.h"
Birth::Birth() {
	d = m = y = 0;
}

istream& operator >> (istream& nhap, Birth& a) {
	do {
		cout << endl;
		cout << "Nhap ngay sinh ";
		cin >> a.d;
		cout << "Nhap thang sinh ";
		cin >> a.m;
		cout << "Nhap nam sinh ";
		cin >> a.y;
		if (HopLe(a.d, a.m, a.y) == false) {
			cout << "\nKhong hop le vui long nhap lai";
		}
	} while (HopLe(a.d, a.m, a.y) != false);
	return nhap;
}

ostream& operator << (ostream& xuat, Birth a) {
	xuat << a.d << "/" << a.m << "/" << a.y;
	return xuat;
}

cin << CBirth;
cout << CBirth;

